// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  title       String   @db.VarChar(255)
  photo       Bytes    @db.ByteA
  description String?
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  album       Album    @relation(fields: [albumId], references: [id])
  albumId     Int
  location    Location @relation(fields: [locationId], references: [id])
  locationId  Int
  likedBy     User[]   @relation("likedBy")
}

model User {
  id             String   @id @default(uuid())
  createdAt      DateTime @default(now())
  username       String   @unique @db.VarChar(20)
  email          String   @unique
  password       String
  profileName    String   @db.VarChar(50)
  profilePic     Bytes?   @db.ByteA
  friendedBy     User[]   @relation("friends")
  likedPosts     Post[]   @relation("likedBy")
  posts          Post[]
  followedAlbums Album[]  @relation("followedAlbums")
  ownedAlbums    Album[]  @relation("ownedAlbums")
  pinnedAlbum    Album?   @relation("pinned", fields: [pinnedAlbumId], references: [id])
  pinnedAlbumId  Int?
  friends        User[]   @relation("friends")
}

model Album {
  id             Int      @id @default(autoincrement())
  title          String   @unique
  createAd       DateTime @default(now())
  tags           String[]
  description    String?
  owner          User     @relation("ownedAlbums", fields: [ownerId], references: [id])
  ownerId        String
  posts          Post[]
  pinnedBy       User[]   @relation("pinned")
  followingUsers User[]   @relation("followedAlbums")
}

model Location {
  id        Int    @id @default(autoincrement())
  name      String @unique
  longitude String
  latitude  String
  posts     Post[]
}
